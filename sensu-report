#!/usr/bin/env python2
"""
SYNOPSIS

"""

def make_parse():
    from optparse import OptionParser
    parser = OptionParser()
    parser.add_option("-s", "--server", dest="server",
                      help="sensu api server hostname", default='sensu')
    parser.add_option("-p", "--port", dest="port",
                      help="sensu server api port", default='4567')
    parser.add_option("-c", "--client", dest="client", default=False,
                      help="hostname of the client to get the report on. Defaults to the local fqdn.")
    return parser

def fetch_sensu_data(server, port, client):
    import urllib2, json
    """ Connects to the Sensu API over a given host and port, and returns
    dictionary based on the retrieved json data. """
    response = urllib2.urlopen('http://' + server + ':' + port + '/events/' + client)
    data = json.load(response)
    return data

def print_report(data):
    import sys
    "Prints a human readable report based on the sensu data"""
    GREEN = '\033[92m'
    RED = '\033[91m'
    CLEAR = '\033[0m'
    print
    if len(data) > 0:
      print "Failed Sensu checks on this host:"
      for entry in data:
        print entry
        if entry['status'] == 2:
            sys.stdout.write("   " + RED + entry['check'] + ': ' + entry['output'] + CLEAR )
        if entry['status'] == 1:
            sys.stdout.write("   " + RED + entry['check'] + ': ' + entry['output'] + CLEAR )
        else:
            sys.stdout.write("   " + RED + entry['check'] + ': ' + entry['output'] + CLEAR )
        print
    else:
      print "All Sensu checks " + GREEN + "green " + CLEAR + "for this host."
    print

def main():
    import socket
    parser = make_parse()   
    (options, args) = parser.parse_args()
    if not options.client: options.client = socket.getfqdn()
    data = fetch_sensu_data(options.server, options.port, options.client)
    print_report(data)

if __name__ == '__main__':
    main()
